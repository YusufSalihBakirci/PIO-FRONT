{"version":3,"file":"js/7155.5f1a1126.js","mappings":"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","sources":["webpack://admiro_vue/./src/components/theme/uikits/typography/TextElements.vue?69ac","webpack://admiro_vue/./src/components/theme/uikits/typography/TextElements.vue","webpack://admiro_vue/./src/components/theme/uikits/typography/TextElements.vue?e9cd"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"d-flex flex-column gap-2\" }\nconst _hoisted_2 = [\"innerHTML\"]\nconst _hoisted_3 = { class: \"d-flex flex-column gap-2\" }\nconst _hoisted_4 = [\"innerHTML\"]\nconst _hoisted_5 = { class: \"blockquote-footer pt-3\" }\n\nimport { ref, defineAsyncComponent } from 'vue'\nimport { inline, textcolor, blockquotes } from \"@/core/data/uikits\"\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TextElements',\n  setup(__props) {\n\nconst Card3 = defineAsyncComponent(() => import(\"@/components/common/card/CardData3.vue\"))\nlet desc2 = ref<string>(\"The <code>&lt;blockquote&gt;</code> tag specifies a section that is quoted from another source.\")\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(Card3), {\n      colClass: \"col-xxl-6 col-xl-12\",\n      cardhaderClass: \"card-no-border pb-0\",\n      pre: \"true\",\n      preClass: \"mt-1 mb-0\",\n      headerTitle: \"true\",\n      title: \"Inline text elements\",\n      desc: \"Styling for common inline HTML5 elements.\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(inline), (item, index) => {\n            return (_openBlock(), _createElementBlock(\"p\", {\n              class: \"mb-0\",\n              key: index,\n              innerHTML: item.font\n            }, null, 8, _hoisted_2))\n          }), 128))\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(Card3), {\n      colClass: \"col-xxl-6 col-xl-12\",\n      cardhaderClass: \"card-no-border pb-0\",\n      titleClass: \"mb-0\",\n      pre: \"true\",\n      preClass: \"mt-1 mb-0\",\n      headerTitle: \"true\",\n      title: \"Text color\",\n      desc: \"You can Give text color by using <code>txt-*</code> class.\"\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(textcolor), (item, index) => {\n            return (_openBlock(), _createElementBlock(\"p\", {\n              class: _normalizeClass([\"mb-0\", item.color]),\n              key: index,\n              innerHTML: item.title\n            }, null, 10, _hoisted_4))\n          }), 128))\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(Card3), {\n      colClass: \"col-xl-12\",\n      cardhaderClass: \"card-no-border pb-0\",\n      cardClass: \"overflow-hidden\",\n      titleClass: \"mb-0\",\n      pre: \"true\",\n      preClass: \"mt-1 mb-0\",\n      headerTitle: \"true\",\n      title: \"Blockquotes\",\n      desc: _unref(desc2)\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(blockquotes), (item, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass([\"figure d-block dark-blockquote\", item.class]),\n            key: index\n          }, [\n            _createElementVNode(\"blockquote\", {\n              class: _normalizeClass([\"blockquote\", item.bgclass])\n            }, [\n              _createElementVNode(\"p\", {\n                class: _normalizeClass([\"mb-0\", item.textclass])\n              }, _toDisplayString(item.text), 3),\n              _createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.footer), 1)\n            ], 2)\n          ], 2))\n        }), 128))\n      ]),\n      _: 1\n    }, 8, [\"desc\"])\n  ], 64))\n}\n}\n\n})","<template>\n    <Card3 colClass=\"col-xxl-6 col-xl-12\" cardhaderClass=\"card-no-border pb-0\" pre=\"true\" preClass=\"mt-1 mb-0\"\n        headerTitle=\"true\" title=\"Inline text elements\" desc=\"Styling for common inline HTML5 elements.\">\n        <div class=\"d-flex flex-column gap-2\">\n            <p class=\"mb-0\" v-for=\"(item, index) in inline\" :key=\"index\" v-html=\"item.font\">\n            </p>\n\n        </div>\n    </Card3>\n\n\n    <Card3 colClass=\"col-xxl-6 col-xl-12\" cardhaderClass=\"card-no-border pb-0\" titleClass=\"mb-0\" pre=\"true\"\n        preClass=\"mt-1 mb-0\" headerTitle=\"true\" title=\"Text color\"\n        desc=\"You can Give text color by using <code>txt-*</code> class.\">\n        <div class=\"d-flex flex-column gap-2\">\n            <p class=\" mb-0\" :class=\"item.color\" v-for=\"(item, index) in textcolor\" :key=\"index\" v-html=\"item.title\"></p>\n        </div>\n    </Card3>\n\n\n    <Card3 colClass=\"col-xl-12\" cardhaderClass=\"card-no-border pb-0\" cardClass=\"overflow-hidden\" titleClass=\"mb-0\"\n        pre=\"true\" preClass=\"mt-1 mb-0\" headerTitle=\"true\" title=\"Blockquotes\" :desc=\"desc2\">\n        <div class=\"figure d-block dark-blockquote\" :class=\"item.class\" v-for=\"(item, index) in blockquotes\" :key=\"index\">\n            <blockquote class=\"blockquote  \" :class=\"item.bgclass\">\n                <p class=\"mb-0 \" :class=\"item.textclass\">{{ item.text }}</p><span class=\"blockquote-footer pt-3\">{{\n                    item.footer }}</span>\n            </blockquote>\n        </div>\n\n    </Card3>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, defineAsyncComponent } from 'vue'\nimport { inline, textcolor, blockquotes } from \"@/core/data/uikits\"\nconst Card3 = defineAsyncComponent(() => import(\"@/components/common/card/CardData3.vue\"))\nlet desc2 = ref<string>(\"The <code>&lt;blockquote&gt;</code> tag specifies a section that is quoted from another source.\")\n</script>","import script from \"./TextElements.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./TextElements.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","Card3","defineAsyncComponent","desc2","ref","_ctx","_cache","_openBlock","_createElementBlock","_Fragment","_createVNode","_unref","colClass","cardhaderClass","pre","preClass","headerTitle","title","desc","default","_withCtx","_createElementVNode","_renderList","inline","item","index","key","innerHTML","font","_","titleClass","textcolor","_normalizeClass","color","cardClass","blockquotes","bgclass","textclass","_toDisplayString","text","footer","__exports__"],"sourceRoot":""}