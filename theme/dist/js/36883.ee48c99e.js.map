{"version":3,"file":"js/36883.ee48c99e.js","mappings":"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","sources":["webpack://admiro_vue/./src/composables/common/getImages.ts","webpack://admiro_vue/./src/components/theme/letterbox/LetterSent.vue?486c","webpack://admiro_vue/./src/components/theme/letterbox/LetterSent.vue","webpack://admiro_vue/./src/components/theme/letterbox/LetterSent.vue?f76b"],"sourcesContent":["export function getImages(path: string) {\n    return require('@/assets/images/' + path)\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport _imports_0 from '@/assets/svg/icon-sprite.svg'\n\n\nconst _hoisted_1 = _imports_0 + '#fill-star'\nconst _hoisted_2 = {\n  class: \"tab-pane fade\",\n  id: \"sent-pill\",\n  role: \"tabpanel\",\n  \"aria-labelledby\": \"sent-pill-tab\"\n}\nconst _hoisted_3 = {\n  key: 0,\n  class: \"email-loader\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"mail-body-wrapper\"\n}\nconst _hoisted_5 = { class: \"inbox-user\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"rounded-border\" }\nconst _hoisted_8 = [\"src\"]\nconst _hoisted_9 = { class: \"inbox-message\" }\nconst _hoisted_10 = { class: \"email-timing\" }\nconst _hoisted_11 = { class: \"email-options\" }\nconst _hoisted_12 = [\"onClick\"]\nconst _hoisted_13 = [\"onClick\"]\n\nimport { ref, } from 'vue'\n\nimport { useCommonStore } from \"@/store/common\"\nimport { getImages } from \"@/composables/common/getImages\"\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'LetterSent',\n  emits: ['selected'],\n  setup(__props, { emit: __emit }) {\n\nlet activeStars = ref<boolean[]>([])\nlet activeEmail = ref<boolean[]>([])\nlet store = useCommonStore()\nlet data = store.sents\nlet emit = __emit\nfunction toggleStar(index: any) {\n    index.isActive = !index.isActive;\n}\nfunction toggleEmail(index: number) {\n    activeEmail.value[index] = !activeEmail.value[index];\n}\nfunction toogle() {\n    emit('selected');\n}\nfunction deleteItem(itemId: number) {\n    data.splice(itemId, 1)\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n    (_unref(store).isLoading)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _createElementVNode(\"ul\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(data), (item, index) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                class: \"inbox-data\",\n                key: index\n              }, [\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _cache[2] || (_cache[2] = _createElementVNode(\"div\", { class: \"form-check form-check-inline m-0\" }, [\n                    _createElementVNode(\"input\", {\n                      class: \"form-check-input checkbox-primary\",\n                      id: \"emailCheckbox1\",\n                      type: \"checkbox\",\n                      value: \"option1\"\n                    }),\n                    _createElementVNode(\"label\", {\n                      class: \"form-check-label\",\n                      for: \"emailCheckbox1\"\n                    })\n                  ], -1)),\n                  (_openBlock(), _createElementBlock(\"svg\", {\n                    class: _normalizeClass([\"important-mail\", item.isActive ? 'active' : '']),\n                    onClick: ($event: any) => (toggleStar(item))\n                  }, _cache[1] || (_cache[1] = [\n                    _createElementVNode(\"use\", { href: _hoisted_1 }, null, -1)\n                  ]), 10, _hoisted_6)),\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    (item.img)\n                      ? (_openBlock(), _createElementBlock(\"img\", {\n                          key: 0,\n                          class: \"img-fluid\",\n                          src: _unref(getImages)(item.img),\n                          alt: \"user\"\n                        }, null, 8, _hoisted_8))\n                      : _createCommentVNode(\"\", true),\n                    (item.textclass)\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 1,\n                          class: _normalizeClass(item.circle)\n                        }, [\n                          _createElementVNode(\"p\", {\n                            class: _normalizeClass(item.textclass)\n                          }, _toDisplayString(item.text), 3)\n                        ], 2))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _createElementVNode(\"p\", null, _toDisplayString(item.name), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"div\", {\n                    class: \"email-data\",\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (toogle()))\n                  }, [\n                    _createElementVNode(\"span\", null, [\n                      _createTextVNode(_toDisplayString(item.desctitle), 1),\n                      _createElementVNode(\"span\", null, _toDisplayString(item.desc), 1)\n                    ]),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass([\"badge\", item.badgeclass])\n                    }, _toDisplayString(item.badge), 3),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass([\"badge\", item.badgeclass1])\n                    }, _toDisplayString(item.badge1), 3)\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    _createElementVNode(\"span\", null, _toDisplayString(item.time), 1)\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_11, [\n                    _createElementVNode(\"div\", {\n                      onClick: ($event: any) => (toggleEmail(index))\n                    }, [\n                      _createElementVNode(\"i\", {\n                        class: _normalizeClass([\"fa-regular fa-envelope envelope-1\", _unref(activeEmail)[index] ? 'hide' : 'show'])\n                      }, null, 2),\n                      _createElementVNode(\"i\", {\n                        class: _normalizeClass([\"fa-solid fa-envelope-open-text envelope-2\", _unref(activeEmail)[index] ? 'show' : 'hide'])\n                      }, null, 2)\n                    ], 8, _hoisted_12),\n                    _createElementVNode(\"i\", {\n                      class: \"fa-solid fa-trash-can trash-3\",\n                      onClick: ($event: any) => (deleteItem(index))\n                    }, null, 8, _hoisted_13),\n                    _cache[3] || (_cache[3] = _createElementVNode(\"i\", { class: \"fa-solid fa-print\" }, null, -1))\n                  ])\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\n    <div class=\"tab-pane fade\" id=\"sent-pill\" role=\"tabpanel\" aria-labelledby=\"sent-pill-tab\">\n        <div v-if=\"store.isLoading\" class=\"email-loader\"></div>\n        <div class=\"mail-body-wrapper\" v-else>\n            <ul>\n                <li class=\"inbox-data\" v-for=\"(item, index) in data\" :key=\"index\">\n                    <div class=\"inbox-user\">\n                        <div class=\"form-check form-check-inline m-0\">\n                            <input class=\"form-check-input checkbox-primary\" id=\"emailCheckbox1\" type=\"checkbox\"\n                                value=\"option1\" />\n                            <label class=\"form-check-label\" for=\"emailCheckbox1\"></label>\n                        </div>\n                        <svg class=\"important-mail\" @click=\"toggleStar(item)\" :class=\"item.isActive ? 'active' : ''\">\n                            <use href=\"@/assets/svg/icon-sprite.svg#fill-star\"></use>\n                        </svg>\n                        <div class=\"rounded-border\"><img class=\"img-fluid\" v-if=\"item.img\" :src=\"getImages(item.img)\"\n                                alt=\"user\" />\n                            <div :class=\"item.circle\" v-if=\"item.textclass\">\n                                <p :class=\"item.textclass\">{{ item.text }}</p>\n                            </div>\n                        </div>\n                        <p>{{ item.name }}</p>\n                    </div>\n                    <div class=\"inbox-message\">\n                        <div class=\"email-data\" @click=\"toogle()\"><span>{{ item.desctitle }}<span> {{ item.desc\n                        }}</span></span>\n                            <div class=\"badge \" :class=\"item.badgeclass\">{{ item.badge }}</div>\n                            <div class=\"badge \" :class=\"item.badgeclass1\">{{ item.badge1 }}</div>\n                        </div>\n                        <div class=\"email-timing\"><span>{{ item.time }}</span></div>\n                        <div class=\"email-options\">\n                            <div @click=\"toggleEmail(index)\">\n                                <i class=\"fa-regular fa-envelope envelope-1\"\n                                    :class=\"activeEmail[index] ? 'hide' : 'show'\"></i><i\n                                    class=\"fa-solid fa-envelope-open-text envelope-2 \"\n                                    :class=\"activeEmail[index] ? 'show' : 'hide'\"></i>\n                            </div>\n                            <i class=\"fa-solid fa-trash-can trash-3\" @click=\"deleteItem(index)\"></i><i\n                                class=\"fa-solid fa-print\"></i>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, defineEmits, } from 'vue'\n\nimport { useCommonStore } from \"@/store/common\"\nimport { getImages } from \"@/composables/common/getImages\"\nlet activeStars = ref<boolean[]>([])\nlet activeEmail = ref<boolean[]>([])\nlet store = useCommonStore()\nlet data = store.sents\nlet emit = defineEmits(['selected'])\nfunction toggleStar(index: any) {\n    index.isActive = !index.isActive;\n}\nfunction toggleEmail(index: number) {\n    activeEmail.value[index] = !activeEmail.value[index];\n}\nfunction toogle() {\n    emit('selected');\n}\nfunction deleteItem(itemId: number) {\n    data.splice(itemId, 1)\n};\n</script>\n","import script from \"./LetterSent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./LetterSent.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getImages","path","require","_hoisted_1","_imports_0","_hoisted_2","class","id","role","_hoisted_3","key","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_defineComponent","__name","emits","setup","__props","_ref","__emit","emit","activeEmail","ref","store","useCommonStore","data","sents","toggleStar","index","isActive","toggleEmail","value","toogle","deleteItem","itemId","splice","_ctx","_cache","_openBlock","_createElementBlock","_unref","isLoading","_createElementVNode","_Fragment","_renderList","item","type","for","_normalizeClass","onClick","$event","href","img","src","alt","_createCommentVNode","textclass","circle","_toDisplayString","text","name","_createTextVNode","desctitle","desc","badgeclass","badge","badgeclass1","badge1","time","__exports__"],"sourceRoot":""}