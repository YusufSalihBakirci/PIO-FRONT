{"version":3,"file":"js/49896.aff728d6.js","mappings":"8MAGMA,EAAa,CAAEC,MAAO,wBAI5B,SAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,WACRC,MAAK,SAACC,GCWR,IAAMC,GAAQC,EAAAA,EAAAA,KAAqB,kBAAM,gCAAgD,IACrFC,GAAWC,EAAAA,EAAAA,IAAY,6FAC3B,SAASC,IACLC,UAAUC,UAAUC,UAAUL,EAASM,OACvCC,MAAM,SACV,CACA,SAASC,IACLL,UAAUC,UAAUC,UAAUL,EAASM,OACvCN,EAASM,MAAQ,GACjBC,MAAM,MACV,CDPA,OAAO,SAACE,EAAUC,GAChB,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAOf,GAAQ,CAChDgB,SAAU,qBACVC,YAAa,OACbC,eAAgB,sBAChBC,MAAO,yBACN,CACDC,SAASC,EAAAA,EAAAA,KAAS,iBAAM,EACtBC,EAAAA,EAAAA,IAAoB,MAAO5B,EAAY,CACrCkB,EAAO,KAAOA,EAAO,IAAKU,EAAAA,EAAAA,IAAoB,IAAK,CAAE3B,MAAO,yBAA2B,0BAA2B,KAClH4B,EAAAA,EAAAA,KAAgBD,EAAAA,EAAAA,IAAoB,WAAY,CAC9C3B,MAAO,oBACP6B,GAAI,oBACJ,sBAAuBZ,EAAO,KAAOA,EAAO,GAAK,SAACa,GAAW,OAAMC,EAAAA,EAAAA,IAAOxB,GAAaA,EAAUM,MAAQiB,EAASvB,EAAWuB,CAAM,GACnIE,KAAM,IACNC,WAAY,SACX,4FAA6F,KAAM,CACpG,CAACC,EAAAA,IAAad,EAAAA,EAAAA,IAAOb,OAEvBoB,EAAAA,EAAAA,IAAoB,MAAO,CAAE3B,MAAO,iBAAmB,EACrD2B,EAAAA,EAAAA,IAAoB,SAAU,CAC5B3B,MAAO,qCACPmC,KAAM,SACNC,QAAS3B,EACT,wBAAyB,OACzB,wBAAyB,sBACxBQ,EAAO,KAAOA,EAAO,GAAK,EAC3BU,EAAAA,EAAAA,IAAoB,IAAK,CAAE3B,MAAO,cAAgB,MAAO,IACzDqC,EAAAA,EAAAA,IAAiB,aAEnBV,EAAAA,EAAAA,IAAoB,SAAU,CAC5B3B,MAAO,oCACPmC,KAAM,SACNC,QAASrB,EACT,wBAAyB,MACzB,wBAAyB,sBACxBE,EAAO,KAAOA,EAAO,GAAK,EAC3BU,EAAAA,EAAAA,IAAoB,IAAK,CAAE3B,MAAO,aAAe,MAAO,IACxDqC,EAAAA,EAAAA,IAAiB,eAIxB,IACDC,EAAG,GAEP,CACA,IElEMC,EAAc,EAEpB,G","sources":["webpack://admiro_vue/./src/components/theme/forms/formwidgets/clipboard/TextArea.vue?da0d","webpack://admiro_vue/./src/components/theme/forms/formwidgets/clipboard/TextArea.vue","webpack://admiro_vue/./src/components/theme/forms/formwidgets/clipboard/TextArea.vue?9e67"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, isRef as _isRef, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"clipboaard-container\" }\n\nimport { ref, defineAsyncComponent } from 'vue'\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TextArea',\n  setup(__props) {\n\nconst Card3 = defineAsyncComponent(() => import(\"@/components/common/card/CardData3.vue\"))\nlet textArea = ref<string>('They clash. Even if the argument appears to be different, it is actually always the same.')\nfunction copyTextareaInput() {\n    navigator.clipboard.writeText(textArea.value);\n    alert('copied');\n}\nfunction cut() {\n    navigator.clipboard.writeText(textArea.value);\n    textArea.value = '';\n    alert('cut');\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(Card3), {\n    colClass: \"col-sm-12 col-md-6\",\n    headerTitle: \"true\",\n    cardhaderClass: \"card-no-border pb-0\",\n    title: \"Clipboard on textarea\"\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _cache[3] || (_cache[3] = _createElementVNode(\"p\", { class: \"card-description mb-2\" }, \"Cut/copy from textarea\", -1)),\n        _withDirectives(_createElementVNode(\"textarea\", {\n          class: \"form-control f-14\",\n          id: \"clipboardExample2\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(textArea) ? (textArea).value = $event : textArea = $event)),\n          rows: \"3\",\n          spellcheck: \"false\"\n        }, \"They clash. Even if the argument appears to be different, it is actually always the same.\", 512), [\n          [_vModelText, _unref(textArea)]\n        ]),\n        _createElementVNode(\"div\", { class: \"mt-3 text-end\" }, [\n          _createElementVNode(\"button\", {\n            class: \"btn btn-warning btn-clipboard mx-1\",\n            type: \"button\",\n            onClick: copyTextareaInput,\n            \"data-clipboard-action\": \"copy\",\n            \"data-clipboard-target\": \"#clipboardExample2\"\n          }, _cache[1] || (_cache[1] = [\n            _createElementVNode(\"i\", { class: \"fa fa-copy\" }, null, -1),\n            _createTextVNode(\" Copy\")\n          ])),\n          _createElementVNode(\"button\", {\n            class: \"btn btn-success btn-clipboard-cut\",\n            type: \"button\",\n            onClick: cut,\n            \"data-clipboard-action\": \"cut\",\n            \"data-clipboard-target\": \"#clipboardExample2\"\n          }, _cache[2] || (_cache[2] = [\n            _createElementVNode(\"i\", { class: \"fa fa-cut\" }, null, -1),\n            _createTextVNode(\" Cut\")\n          ]))\n        ])\n      ])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<template>\n    <Card3 colClass=\"col-sm-12 col-md-6\" headerTitle=\"true\" cardhaderClass=\"card-no-border pb-0\"\n        title=\"Clipboard on textarea\">\n        <div class=\"clipboaard-container\">\n            <p class=\"card-description mb-2\">Cut/copy from textarea</p>\n            <textarea class=\"form-control f-14\" id=\"clipboardExample2\" v-model=\"textArea\" rows=\"3\"\n                spellcheck=\"false\">They clash. Even if the argument appears to be different, it is actually always the same.</textarea>\n            <div class=\"mt-3 text-end\">\n                <button class=\"btn btn-warning btn-clipboard mx-1\" type=\"button\" @click=\"copyTextareaInput\"\n                    data-clipboard-action=\"copy\" data-clipboard-target=\"#clipboardExample2\"><i class=\"fa fa-copy\"></i>\n                    Copy</button>\n                <button class=\"btn btn-success btn-clipboard-cut\" type=\"button\" @click=\"cut\" data-clipboard-action=\"cut\"\n                    data-clipboard-target=\"#clipboardExample2\"><i class=\"fa fa-cut\"></i>\n                    Cut</button>\n            </div>\n        </div>\n    </Card3>\n</template>\n<script lang=\"ts\" setup>\nimport { ref, defineAsyncComponent } from 'vue'\nconst Card3 = defineAsyncComponent(() => import(\"@/components/common/card/CardData3.vue\"))\nlet textArea = ref<string>('They clash. Even if the argument appears to be different, it is actually always the same.')\nfunction copyTextareaInput() {\n    navigator.clipboard.writeText(textArea.value);\n    alert('copied');\n}\nfunction cut() {\n    navigator.clipboard.writeText(textArea.value);\n    textArea.value = '';\n    alert('cut');\n}\n</script>","import script from \"./TextArea.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./TextArea.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_defineComponent","__name","setup","__props","Card3","defineAsyncComponent","textArea","ref","copyTextareaInput","navigator","clipboard","writeText","value","alert","cut","_ctx","_cache","_openBlock","_createBlock","_unref","colClass","headerTitle","cardhaderClass","title","default","_withCtx","_createElementVNode","_withDirectives","id","$event","_isRef","rows","spellcheck","_vModelText","type","onClick","_createTextVNode","_","__exports__"],"sourceRoot":""}