{"version":3,"file":"js/89714.eb381304.js","mappings":"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","sources":["webpack://admiro_vue/./src/core/data/todo.ts","webpack://admiro_vue/./src/store/todo.ts","webpack://admiro_vue/./src/components/theme/todo/AddTask.vue?224d","webpack://admiro_vue/./src/components/theme/todo/AddTask.vue","webpack://admiro_vue/./src/components/theme/todo/AddTask.vue?c1b6"],"sourcesContent":["export interface TodoSidebarItem {\n    badgeclass: string;\n    icon: string;\n    title: string;\n    pillclass?: string;\n    badge?: string;\n}\nexport interface TodoItem {\n    id: number;\n    title: string;\n    delete: boolean;\n    status: string;\n    badgeClass: string;\n    priority: string;\n    date: string;\n}\nexport const todosidebar: TodoSidebarItem[] = [\n    {\n        badgeclass: \"badge-light-primary\",\n        icon: \"file-plus\",\n        title: \"All Task\"\n    },\n    {\n        badgeclass: \"badge-light-success\",\n        icon: \"check-circle\",\n        title: \"Completed\",\n        pillclass: \"badge  badge-success\",\n        badge: \"3\"\n    },\n    {\n        badgeclass: \"badge-light-danger\",\n        icon: \"cast\",\n        title: \"Pending\",\n        pillclass: \"badge  badge-danger\",\n        badge: \"2\"\n    },\n    {\n        badgeclass: \"badge-light-primary\",\n        icon: \"activity\",\n        title: \"In Process\",\n        pillclass: \"badge  badge-primary\",\n        badge: \"2\"\n    },\n    {\n        badgeclass: \"badge-light-danger\",\n        icon: \"trash\",\n        title: \"Trash\"\n    }\n]\nexport const data: TodoItem[] = [\n    {\n        id: 1,\n        title: \"Check validation involves making sure all your tags are properly closed and nested.\",\n        delete: false,\n        status: \"complete\",\n        badgeClass: \"badge-light-primary\",\n        priority: \"In progress\",\n        date: \"10 Nov\"\n    },\n    {\n        id: 2,\n        title: \"Test the outgoing links from all the pages to the specific domain under test.\",\n        delete: false,\n        status: \"incomplete\",\n        badgeClass: \"badge-light-danger\",\n        priority: \"Pending\",\n        date: \"04 Aug\"\n    },\n    {\n        id: 3,\n        title: \"Test links are used to send emails to admin or other users from web pages.\",\n        delete: false,\n        status: \"complete\",\n        badgeClass: \"badge-light-success \",\n        priority: \"Done\",\n        date: \"25 Feb\"\n    },\n    {\n        id: 4,\n        title: \"Options to create forms, if any, form deletes a view or modify the forms.\",\n        delete: false,\n        status: \"incomplete\",\n        badgeClass: \"badge-light-primary\",\n        priority: \"In progress\",\n        date: \"15 Dec\"\n    },\n    {\n        id: 5,\n        title: \"Wrong inputs in the forms to the fields in the forms.\",\n        delete: false,\n        status: \"Complete\",\n        badgeClass: \"badge-light-danger\",\n        priority: \"Pending\",\n        date: \"11 Nov\"\n    },\n    {\n        id: 6,\n        title: \"Check if the instructions provided are perfect to satisfy its purpose.\",\n        delete: false,\n        status: \"incomplete\",\n        badgeClass: \"badge-light-danger\",\n        priority: \"Pending\",\n        date: \"04 Sept\"\n    },\n    {\n        id: 7,\n        title: \"Application server and Database server interface.\",\n        delete: false,\n        status: \"incomplete\",\n        badgeClass: \"badge-light-success \",\n        priority: \"Done\",\n        date: \"08 July\"\n    }\n]","\nimport { defineStore } from 'pinia'\nimport { ref } from \"vue\"\n\nimport { data } from \"@/core/data/todo\"\n\nexport const useTodoStore = defineStore('todo', () => {\n\n\n    const todo = ref(data)\n    function taskcomplete(item: number) {\n\n        todo.value.find(function (list: any) {\n            if (list.id === item) {\n                return list.status = list.status === 'complete' ? 'incomplete' : 'complete';\n            }\n        });\n    }\n    function tododelete(index: number) {\n\n        todo.value.splice(index, 1);\n    }\n\n    function addtodo(item: any) {\n\n        const todoID: any = []\n        todo.value.forEach((element: any) => {\n            todoID.push(element.id)\n        });\n\n        const id: number = Math.max(...todoID) + 1;\n\n        todo.value.unshift({\n            'id': id,\n            'title': item.value,\n            'priority': \"Pending\",\n            'date': \"16 Jan\",\n            'badgeClass': \"badge-light-danger\",\n            'delete': false,\n            'status': 'incomplete'\n        })\n    }\n\n    return {\n        todo,\n        taskcomplete,\n        tododelete,\n        addtodo\n    }\n})\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, withKeys as _withKeys, isRef as _isRef, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"col-xl-9 xl-70 box-col-12\" }\nconst _hoisted_2 = { class: \"card\" }\nconst _hoisted_3 = { class: \"card-header b-bottom card-no-border pb-0\" }\nconst _hoisted_4 = { class: \"todo-list-header\" }\nconst _hoisted_5 = { class: \"new-task-wrapper input-group\" }\nconst _hoisted_6 = { class: \"card-body\" }\nconst _hoisted_7 = { class: \"todo\" }\nconst _hoisted_8 = { class: \"todo-list-wrapper\" }\nconst _hoisted_9 = { class: \"todo-list-container\" }\nconst _hoisted_10 = { class: \"todo-list-body custom-scrollbar\" }\nconst _hoisted_11 = { id: \"todo-list\" }\nconst _hoisted_12 = { class: \"task-container\" }\nconst _hoisted_13 = { class: \"task-label\" }\nconst _hoisted_14 = { class: \"d-flex align-items-center gap-3\" }\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = { class: \"task-action-btn\" }\nconst _hoisted_17 = [\"onClick\"]\n\nimport { useTodoStore } from \"@/store/todo\"\nimport { toast } from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css';\nimport { ref } from \"vue\"\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AddTask',\n  setup(__props) {\n\nlet task = ref<string>('')\nlet addtask = ref<boolean>(false)\nlet store = useTodoStore()\nlet todolist = store.todo\nfunction addnewtask() {\n    if (task.value !== '') {\n        store.addtodo(task);\n        task.value = '';\n        addtask.value = false;\n        toast.success(' Task list is updated.', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n\n}\nfunction taskcomplete(id: number, status: string) {\n    store.taskcomplete(id);\n    if (status !== '') {\n        toast.success(' tasks marked as complete. ', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n    else {\n        toast.error(' tasks marked as incomplete.', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n\n}\nfunction remove(index: number) {\n    store.tododelete(index);\n\n    toast.error(' Task has been deleted.', {\n        hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n    });\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"form-control\",\n              id: \"new-task\",\n              placeholder: \"Enter new task here. . .\",\n              onKeyup: _withKeys(addnewtask, [\"enter\"]),\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(task) ? (task).value = $event : task = $event))\n            }, null, 544), [\n              [_vModelText, _unref(task)]\n            ]),\n            _createElementVNode(\"span\", {\n              class: \"btn btn-primary add-new-task-btn\",\n              id: \"add-task\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (addnewtask()))\n            }, \"Add Task\")\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"ul\", _hoisted_11, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(todolist), (todo, index) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      key: index,\n                      class: _normalizeClass([\"task\", { 'completed': todo.status == 'complete' }])\n                    }, [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"h4\", _hoisted_13, _toDisplayString(todo.title), 1),\n                        _createElementVNode(\"div\", _hoisted_14, [\n                          _createElementVNode(\"span\", {\n                            class: _normalizeClass([\"badge\", todo.badgeClass])\n                          }, _toDisplayString(todo.priority), 3),\n                          _createElementVNode(\"h5\", {\n                            class: \"assign-name m-0\",\n                            onClick: ($event: any) => (taskcomplete(todo.id, todo.status))\n                          }, _toDisplayString(todo.date), 9, _hoisted_15),\n                          _createElementVNode(\"span\", _hoisted_16, [\n                            _createElementVNode(\"span\", {\n                              class: \"action-box large delete-btn\",\n                              title: \"Delete Task\",\n                              onClick: ($event: any) => (remove(index))\n                            }, _cache[2] || (_cache[2] = [\n                              _createElementVNode(\"i\", { class: \"icon\" }, [\n                                _createElementVNode(\"i\", { class: \"icon-trash\" })\n                              ], -1)\n                            ]), 8, _hoisted_17)\n                          ])\n                        ])\n                      ])\n                    ], 2))\n                  }), 128))\n                ])\n              ])\n            ])\n          ]),\n          _cache[3] || (_cache[3] = _createElementVNode(\"div\", { class: \"notification-popup hide\" }, [\n            _createElementVNode(\"p\", null, [\n              _createElementVNode(\"span\", { class: \"task\" }),\n              _createElementVNode(\"span\", { class: \"notification-text\" })\n            ])\n          ], -1))\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n    <div class=\"col-xl-9 xl-70 box-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header b-bottom card-no-border pb-0\">\n                <div class=\"todo-list-header\">\n                    <div class=\"new-task-wrapper input-group\">\n                        <input class=\"form-control\" id=\"new-task\" placeholder=\"Enter new task here. . .\"\n                            v-on:keyup.enter=\"addnewtask\" v-model=\"task\"><span class=\"btn btn-primary add-new-task-btn\"\n                            id=\"add-task\" @click=\"addnewtask()\">Add Task</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"todo\">\n                    <div class=\"todo-list-wrapper\">\n                        <div class=\"todo-list-container\">\n                            <div class=\"todo-list-body custom-scrollbar\">\n                                <ul id=\"todo-list\">\n                                    <li v-for=\"(todo, index) in todolist\" :key=\"index\" class=\"task\"\n                                        :class=\"{ 'completed': todo.status == 'complete' }\">\n                                        <div class=\"task-container\">\n                                            <h4 class=\"task-label\"> {{ todo.title }} </h4>\n                                            <div class=\"d-flex align-items-center gap-3\">\n                                                <span class=\"badge \" :class=\"todo.badgeClass\">{{\n                                                    todo.priority\n                                                }}</span>\n                                                <h5 class=\"assign-name m-0\" @click=\"taskcomplete(todo.id, todo.status)\">\n                                                    {{ todo.date }}</h5>\n                                                <span class=\"task-action-btn\">\n                                                    <span class=\"action-box large delete-btn\" title=\"Delete Task\"\n                                                        @click=\"remove(index)\"><i class=\"icon\"><i\n                                                                class=\"icon-trash\"></i></i></span>\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"notification-popup hide\">\n                        <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useTodoStore } from \"@/store/todo\"\nimport { toast } from 'vue3-toastify';\nimport 'vue3-toastify/dist/index.css';\nimport { ref } from \"vue\"\nlet task = ref<string>('')\nlet addtask = ref<boolean>(false)\nlet store = useTodoStore()\nlet todolist = store.todo\nfunction addnewtask() {\n    if (task.value !== '') {\n        store.addtodo(task);\n        task.value = '';\n        addtask.value = false;\n        toast.success(' Task list is updated.', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n\n}\nfunction taskcomplete(id: number, status: string) {\n    store.taskcomplete(id);\n    if (status !== '') {\n        toast.success(' tasks marked as complete. ', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n    else {\n        toast.error(' tasks marked as incomplete.', {\n            hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n        });\n    }\n\n}\nfunction remove(index: number) {\n    store.tododelete(index);\n\n    toast.error(' Task has been deleted.', {\n        hideProgressBar: true, autoClose: 2000, theme: 'colored', position: 'top-right'\n    });\n}\n\n</script>","import script from \"./AddTask.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AddTask.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["todosidebar","badgeclass","icon","title","pillclass","badge","data","id","delete","status","badgeClass","priority","date","useTodoStore","defineStore","todo","ref","taskcomplete","item","value","find","list","tododelete","index","splice","addtodo","todoID","forEach","element","push","Math","max","apply","unshift","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_defineComponent","__name","setup","__props","task","addtask","store","todolist","addnewtask","toast","success","hideProgressBar","autoClose","theme","position","error","remove","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_withDirectives","placeholder","onKeyup","_withKeys","$event","_isRef","_vModelText","_unref","onClick","_Fragment","_renderList","key","_normalizeClass","_toDisplayString","__exports__"],"sourceRoot":""}